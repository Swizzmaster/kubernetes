From 73151959f5eee2ed3eb76ede33e9ea793029dccd Mon Sep 17 00:00:00 2001
From: Jyoti Mahapatra <jyotima@amazon.com>
Date: Sat, 22 Jan 2022 01:16:11 +0000
Subject: [PATCH] --EKS-PATCH-- Fix kubelet ipv6 address comparison

--EKS-PRIVATE--

The node ip provided to the node-ip in kubelet params and the one
provided by cloud provider can differ in the ipv6 formating. String
comparison won't work when the ips are the same but differ in
formatting, eg. 2600:1f14:1d4:d101:0:0:0:ba3d and
2600:1f14:1d4:d101::ba3d

Signed-off-by: Jyoti Mahapatra <jyotima@amazon.com>
---
 pkg/kubelet/nodestatus/setters.go      |  6 ++++--
 pkg/kubelet/nodestatus/setters_test.go | 14 ++++++++++++++
 2 files changed, 18 insertions(+), 2 deletions(-)

diff --git a/pkg/kubelet/nodestatus/setters.go b/pkg/kubelet/nodestatus/setters.go
index 52f12178b66..a31cfbd2970 100644
--- a/pkg/kubelet/nodestatus/setters.go
+++ b/pkg/kubelet/nodestatus/setters.go
@@ -125,8 +125,10 @@ func NodeAddress(nodeIPs []net.IP, // typically Kubelet.nodeIPs
 
 				nodeIPTypes := make(map[v1.NodeAddressType]bool)
 				for _, nodeAddress := range cloudNodeAddresses {
-					if nodeAddress.Address == nodeIP.String() {
-						enforcedNodeAddresses = append(enforcedNodeAddresses, v1.NodeAddress{Type: nodeAddress.Type, Address: nodeAddress.Address})
+					if net.ParseIP(nodeAddress.Address).Equal(nodeIP) {
+						enforcedNodeAddresses = append(enforcedNodeAddresses, v1.NodeAddress{
+							Type: nodeAddress.Type,
+							Address: nodeIP.String()})
 						nodeIPTypes[nodeAddress.Type] = true
 					}
 				}
diff --git a/pkg/kubelet/nodestatus/setters_test.go b/pkg/kubelet/nodestatus/setters_test.go
index 0547446adba..f1422c6d62f 100644
--- a/pkg/kubelet/nodestatus/setters_test.go
+++ b/pkg/kubelet/nodestatus/setters_test.go
@@ -293,6 +293,20 @@ func TestNodeAddress(t *testing.T) {
 			hostnameOverride: true,
 			shouldError:      false,
 		},
+		{
+			name:   "Dual-stack cloud, with nodeIP, different IPv6 formats",
+			nodeIP: net.ParseIP("2600:1f14:1d4:d101::ba3d"),
+			nodeAddresses: []v1.NodeAddress{
+				{Type: v1.NodeInternalIP, Address: "10.1.1.1"},
+				{Type: v1.NodeInternalIP, Address: "2600:1f14:1d4:d101:0:0:0:ba3d"},
+				{Type: v1.NodeHostName, Address: testKubeletHostname},
+			},
+			expectedAddresses: []v1.NodeAddress{
+				{Type: v1.NodeInternalIP, Address: "2600:1f14:1d4:d101::ba3d"},
+				{Type: v1.NodeHostName, Address: testKubeletHostname},
+			},
+			shouldError: false,
+		},
 		{
 			name: "Dual-stack cloud, IPv4 first, no nodeIP",
 			nodeAddresses: []v1.NodeAddress{
