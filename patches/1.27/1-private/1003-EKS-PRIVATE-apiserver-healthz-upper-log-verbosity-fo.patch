From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Gyuho Lee <leegyuho@amazon.com>
Date: Tue, 28 Sep 2021 19:38:47 +0000
Subject: [PATCH] --EKS-PRIVATE-- apiserver/healthz: upper log verbosity for
 "kms-provider-0"

To silence

    cannot exclude some health checks, no health checks are installed
    matching "kms-provider-0"

This is logged when external health checker calls
"/healthz?exclude=kms-provider-0" against API server
that does not enable KMS encryption. Reduce such logs
to minimize the noise and log billing.

Signed-off-by: Gyuho Lee <leegyuho@amazon.com>
---
 .../src/k8s.io/apiserver/pkg/server/healthz/healthz.go    | 8 ++++++--
 .../k8s.io/apiserver/pkg/server/healthz/healthz_test.go   | 2 +-
 .../controlplane/transformation/transformation_test.go    | 8 ++++++++
 3 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/staging/src/k8s.io/apiserver/pkg/server/healthz/healthz.go b/staging/src/k8s.io/apiserver/pkg/server/healthz/healthz.go
index 63ff59750f0..d02601cb0fd 100644
--- a/staging/src/k8s.io/apiserver/pkg/server/healthz/healthz.go
+++ b/staging/src/k8s.io/apiserver/pkg/server/healthz/healthz.go
@@ -252,8 +252,12 @@ func handleRootHealth(name string, firstTimeHealthy func(), checks ...HealthChec
 			}
 		}
 		if excluded.Len() > 0 {
-			fmt.Fprintf(&individualCheckOutput, "warn: some health checks cannot be excluded: no matches for %s\n", formatQuoted(excluded.List()...))
-			klog.V(6).Infof("cannot exclude some health checks, no health checks are installed matching %s",
+			// EKS-PATCH: to exclude "kms-provider-0" user-induced error, EKS has a separate alarm for encryption provider
+			verbosity := klog.V(6)
+			if verbosity.Enabled() {
+				fmt.Fprintf(&individualCheckOutput, "warn: some health checks cannot be excluded: no matches for %s\n", formatQuoted(excluded.List()...))
+			}
+			verbosity.Infof("cannot exclude some health checks, no health checks are installed matching %s",
 				formatQuoted(excluded.List()...))
 		}
 		// always be verbose on failure
diff --git a/staging/src/k8s.io/apiserver/pkg/server/healthz/healthz_test.go b/staging/src/k8s.io/apiserver/pkg/server/healthz/healthz_test.go
index 89937987e2c..42951e25434 100644
--- a/staging/src/k8s.io/apiserver/pkg/server/healthz/healthz_test.go
+++ b/staging/src/k8s.io/apiserver/pkg/server/healthz/healthz_test.go
@@ -106,7 +106,7 @@ func testMultipleChecks(path, name string, t *testing.T) {
 		{"?exclude=dontexist", "ok", http.StatusOK, false},
 		{"?exclude=bad", "ok", http.StatusOK, true},
 		{"?verbose=true&exclude=bad", fmt.Sprintf("[+]ping ok\n[+]bad excluded: ok\n%s check passed\n", name), http.StatusOK, true},
-		{"?verbose=true&exclude=dontexist", fmt.Sprintf("[+]ping ok\nwarn: some health checks cannot be excluded: no matches for \"dontexist\"\n%s check passed\n", name), http.StatusOK, false},
+		{"?verbose=true&exclude=dontexist", fmt.Sprintf("[+]ping ok\n%s check passed\n", name), http.StatusOK, false},
 		{"/ping", "ok", http.StatusOK, false},
 		{"", "ok", http.StatusOK, false},
 		{"?verbose", fmt.Sprintf("[+]ping ok\n[-]bad failed: reason withheld\n%s check failed\n", name), http.StatusInternalServerError, true},
diff --git a/test/integration/controlplane/transformation/transformation_test.go b/test/integration/controlplane/transformation/transformation_test.go
index b090cfae133..223d22cfe24 100644
--- a/test/integration/controlplane/transformation/transformation_test.go
+++ b/test/integration/controlplane/transformation/transformation_test.go
@@ -20,6 +20,7 @@ import (
 	"bytes"
 	"context"
 	"encoding/json"
+	"flag"
 	"fmt"
 	"os"
 	"path/filepath"
@@ -99,6 +100,13 @@ func newTransformTest(l kubeapiservertesting.Logger, transformerConfigYAML strin
 		e.configDir = configDir
 	}
 
+	// See EKS-PRIVATE-apiserver-healthz-upper-log-verbosity-fo.patch
+	prev := flag.Lookup("v").Value.(flag.Getter).Get().(klog.Level)
+	flag.Set("v", "6")
+	defer func() {
+		flag.Set("v", prev.String())
+	}()
+
 	if e.kubeAPIServer, err = kubeapiservertesting.StartTestServer(l, nil, e.getEncryptionOptions(reload), e.storageConfig); err != nil {
 		return nil, fmt.Errorf("failed to start KubeAPI server: %v", err)
 	}
