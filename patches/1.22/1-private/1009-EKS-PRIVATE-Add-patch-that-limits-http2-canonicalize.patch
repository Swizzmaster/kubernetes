From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Josselin Costanzi <costanzj@amazon.com>
Date: Wed, 8 Jun 2022 22:18:43 +0000
Subject: [PATCH] --EKS-PRIVATE-- Add patch that limits http2 canonicalized
 headers cache size

Why is patch private and not public/upstreamed?:

If there are plans up upstream, provide relevant links:

Description of changes, customer issues, internal docs, etc.:
Related: https://code.amazon.com/packages/GoLang/commits/2930a16312c510134f182242be721679e3f083a1#
---
 vendor/golang.org/x/net/http2/server.go | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/vendor/golang.org/x/net/http2/server.go b/vendor/golang.org/x/net/http2/server.go
index d219dc4c76d..46e006c6d80 100644
--- a/vendor/golang.org/x/net/http2/server.go
+++ b/vendor/golang.org/x/net/http2/server.go
@@ -725,7 +725,8 @@ func (sc *serverConn) canonicalHeader(v string) string {
 	// so high as to permit unreaasonable memory usage if the peer sends an unbounded
 	// number of unique header keys.
 	const maxCachedCanonicalHeaders = 32
-	if len(sc.canonHeader) < maxCachedCanonicalHeaders {
+	const maxCachedCanonicalHeadersKeysSize = 1 << 10
+	if len(sc.canonHeader) < maxCachedCanonicalHeaders && len(cv) < maxCachedCanonicalHeadersKeysSize {
 		sc.canonHeader[v] = cv
 	}
 	return cv
